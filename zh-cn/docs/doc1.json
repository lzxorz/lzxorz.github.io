{
  "filename": "doc1.md",
  "__html": "<h3>Freeman 快速开发框架</h3>\n<div style=\"text-align: center\">\n<p><a href=\"https://github.com/elunez/eladmin/blob/master/LICENSE\"><img src=\"https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg\" alt=\"AUR\"></a>\n<img src=\"https://img.shields.io/badge/license-Apache%202.0-blue.svg?longCache=true&amp;style=flat-square\" alt=\"https://img.shields.io/badge/license-Apache%202.0-blue.svg?longCache=true&amp;style=flat-square\">\n<img src=\"https://img.shields.io/badge/springboot-2.1.4-yellow.svg?longCache=true&amp;style=flat-square\" alt=\"https://img.shields.io/badge/springboot-2.1.4-yellow.svg?longCache=true&amp;style=flat-square\">\n<img src=\"https://img.shields.io/badge/shiro-1.4.0-orange.svg?longCache=true&amp;style=flat-square\" alt=\"https://img.shields.io/badge/shiro-1.4.0-orange.svg?longCache=true&amp;style=flat-square\">\n<img src=\"https://img.shields.io/badge/vue-2.6.10-brightgreen.svg?longCache=true&amp;style=flat-square\" alt=\"https://img.shields.io/badge/vue-2.6.10-brightgreen.svg?longCache=true&amp;style=flat-square\"></p>\n</div>\n<h4>项目简介</h4>\n<p>Freeman是基于 Spring Boot2 + Spring data Jpa + Shiro + Vue2 + JWT 的前后端分离的敏捷开发框架；以Spring Framework为核心容器，Spring data Jpa(Hibernate实现)为数据访问层， Apache Shiro为权限框架，Redis对常用数据进行缓存，前端使用Vue全家桶，前后端分离、JWT鉴权的开源框架。</p>\n<p>角色的功能权限控制方式为基于RBAC规范的Shiro，角色数据范围控制是根据用户的所属机构、数据的创建者(用户ID)实现。项目支持前端菜单动态路由。前后端交互使用JWT验证权限，使用Redis调用lua脚本CAS的方式，并且在令牌刷新时，旧令牌续命30秒进行平滑过渡，丝般顺滑地达到了用户无感知动态刷新JWT的目的。</p>\n<p>jpa<code>动态条件查询写起来麻烦</code>，<code>项目的逻辑复杂的时候，代码冗长、sql逻辑不直观</code>的坑，我想努力填一下，这是我写这个项目的初衷。</p>\n<p>已内置很多优秀的基础功能和高效的 工具，包括：系统权限组件、数据权限组件、数据字典组件等。前端界面风格采用了阿里开源的<code>ant-design-vue</code>框架。密码加密、访问验证、数据权限验证。使用Maven做项目管理，提高项目的易开发性、扩展性。</p>\n<p>目前功能模块代码生成器、权限框架、数据字典、数据缓存、数据监控、计划任务、多数据源管理、类似mybatis动态SQL、短信发送、邮件发送、统计功能等功能。</p>\n<h4>技术特点</h4>\n<p>使用目前流行的WEB开发架构技术，如 SpringBoot,Mybatis, jpa(Hibernate),Apache Shiro ,JWT 等等，目前仅保证对MySQL数据库的完美支持。 分层设计：使用分层设计，分为dao，service，Controller，低耦合，高内聚。</p>\n<h4>令牌刷新方式</h4>\n<p>前端axios请求拦截器自动把令牌放入head，axios响应拦截器中检查有<code>newToken</code>标记，有就更新保存的令牌。后端shiro拦截需要权限的接口，每次都拿到JWT进行认证。采用CAS机制+刚过期令牌续期30秒，实现用户无感知刷新，\n并且在令牌过期时大量并发请求不会出错。</p>\n<p><strong>开发文档</strong>  <a href=\"https://lzxorz.github.io/zh-cn/docs/doc1.html\">https://lzxorz.github.io/zh-cn/docs/doc1.html</a></p>\n<p><strong>体验地址</strong>  <a href=\"http://47.105.42.254\">http://47.105.42.254</a></p>\n<p><strong>账号、密码</strong> <code>system/123456</code></p>\n<hr>\n<h4>项目源码</h4>\n<table>\n<thead>\n<tr>\n<th>平台</th>\n<th>源码链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>github</td>\n<td><a href=\"https://github.com/lzxorz/freeman\">https://github.com/lzxorz/freeman</a></td>\n</tr>\n<tr>\n<td>码云</td>\n<td><s><a href=\"https://gitee.com/lzxorz/freeman\">https://gitee.com/lzxorz/freeman</a></s></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h4>技术架构</h4>\n<h5>开发环境</h5>\n<ul>\n<li>语言：java8</li>\n<li>IDE(后端)： IDEA 或者 Eclipse</li>\n<li>IDE(前端)： vscode 或者 WebStorm 或者 IDEA</li>\n<li>依赖管理：Maven</li>\n<li>构建工具：Maven</li>\n<li>数据库：MySQL5.7+</li>\n<li>缓存：Redis4+</li>\n</ul>\n<h5>技术选型</h5>\n<p>1、后端</p>\n<ul>\n<li>核心框架：Spring boot 2.1.4</li>\n<li>持久层框架：Spring Data Jpa</li>\n<li>数据库连接池：hikari <s>Alibaba Druid</s></li>\n<li>安全框架：Apache Shiro 1.4、java-jwt3.8.1</li>\n<li>服务端验证：Hibernate Validator</li>\n<li>日志框架：Logback</li>\n<li>任务调度：Quartz</li>\n<li>缓存框架：Redis</li>\n<li>工具类：Hutool 4.5.6、fastjson 1.2.58、Mapstruct 1.3.0.Final</li>\n<li>其他: lombok 1.18.8、Swagger 2.9.2、Ip2region 1.7.2、dozer 5.5.1、fst 2.5.7</li>\n</ul>\n<p>2、前端</p>\n<ul>\n<li>核心框架：Vue 2.6.10,ant-design-vue</li>\n<li>路由管理：Vue Router</li>\n<li>状态管理：Vuex</li>\n<li>http库：Axios</li>\n<li>构建工具：@vue/cli 3.8.2,yarn</li>\n<li>富文本编辑器：vue-ueditor-wrap</li>\n<li>图表库：vue-apexcharts</li>\n<li>代码检测：Eslint</li>\n<li>头像裁剪组件：vue-cropper</li>\n</ul>\n<hr>\n<h4>系统功能</h4>\n<ul>\n<li>用户管理：提供用户的相关配置，新增用户后，默认密码为123456</li>\n<li>角色管理：对权限与菜单进行分配，可以设置角色的数据范围</li>\n<li>权限管理：权限细化到接口，可以理解成按钮权限</li>\n<li>菜单管理：已实现菜单动态路由，后端可配置化，支持多级菜单</li>\n<li>部门管理：可配置系统组织架构，树形表格展示</li>\n<li>岗位管理：配置各个部门的职位</li>\n<li>字典管理：应广大码友的要求加入字典管理，可维护常用一些固定的数据，如：状态，性别等</li>\n<li>操作日志：记录用户操作的日志</li>\n<li>异常日志：记录异常日志，方便开发人员定位错误</li>\n<li>系统缓存：使用jedis将缓存操作可视化，并提供对redis的基本操作，可根据需求自行扩展</li>\n<li>定时任务：整合Quartz做定时任务，加入任务日志，任务运行情况一目了然</li>\n</ul>\n<h4>项目结构</h4>\n<p>项目采用分模块开发方式</p>\n<pre><code class=\"language-shell\">freeman\n├── freeman-ant-design-vue   前端vue项目\n│   ├── public\n│   └── src\n│       ├── api\n│       ├── assets\n│       ├── components\n│       └── views\n|\n├── freeman-app\n│   └── com.freeman\n│       ├── common 公共模块\n│       │   ├── advice        统一异常处理\n│       │   ├── asyncTask     异步任务\n│       │   ├── auth\n│       │   │   └── shiro     权限控制\n│       │   │       ├── cache\n│       │   │       ├── filter\n│       │   │       ├── realm 支持多种登录方式\n│       │   │       ├── session 用户ID=&gt;sessionId\n│       │   │       ├── token \n│       │   │       └── utils Shiro工具类\n│       │   ├── base          基础父类\n│       │   │   ├── controller\n│       │   │   ├── domain\n│       │   │   └── service\n│       │   │       └── impl\n│       │   ├── config         配置\n│       │   ├── constants      常量\n│       │   ├── dataPerm       权限过滤\n│       │   ├── dataSource     动态多数据源\n│       │   ├── log            系统日志切面处理\n│       │   ├── runner         项目启动加载\n│       │   ├── task           简单定时任务\n│       ├── job                quartz任务调度\n│       └── sys                后台管理\n|\n├── freeman-jpa-plus           jpa增强模块\n|\n└── freeman-common             通用模块\n    └── com.freeman.common\n        ├── cache.redis        缓存\n        ├── file               文件上传\n        ├── limit              接口限流\n        ├── reflect            反射工具类\n        ├── result             数据统一返回处理\n        ├── utils              常用工具类\n        ├── validator          bean验证\n        └── xss                xss过滤\n\n</code></pre>\n<h4>系统预览</h4>\n<table>\n    <tr>\n        <td><img src=\"img/home.png\"/></td>\n        <td><img src=\"img/org.png\"/></td>\n    </tr>\n    <tr>\n        <td><img src=\"img/user.png\"/></td>\n        <td><img src=\"img/userinfo.png\"/></td>\n    </tr>\n    <tr>\n        <td><img src=\"img/track.png\"/></td>\n        <td><img src=\"img/setting.png\"/></td>\n    </tr>\n</table>\n<h4>反馈交流</h4>\n<ul>\n<li>QQ交流群：817181470</li>\n</ul>\n<h4>使用说明</h4>\n<p>jdk1.8,mysql5.7,redis4+,lombok1.18.8</p>\n<p>后端</p>\n<ul>\n<li>导入freeman目录下的freeman.sql文件到mysql数据库</li>\n<li>导入项目到Idea,(项目目前使用分模块开发，建议是用IDEA开发).</li>\n<li>修改数据库配置: application-dev.yml中的jdbc-url、username、password.</li>\n<li>修改redis配置: application-dev.yml中的host、port、password.</li>\n<li>启动项目(freeman-app中的com.freeman.FreemanApplication),管理员账号system/密码123456\n前端</li>\n<li>freeman-ant-design-vue执行终端命令<code>yarn</code>安装依赖</li>\n<li>安装完成后执行<code>yarn serve</code>启动项目,会自动打开浏览器</li>\n</ul>\n<h4>项目部署流程</h4>\n<p>node,yarn</p>\n<p>后端 freeman-app</p>\n<ul>\n<li>确认修改正确yml配置文件中的spring.profiles.active参数,mysql数据库连接参数,redis连接\n在freeman-parent目录终端执行maven命令 <code>clean package</code></li>\n<li>部署方式用两种：\n<ul>\n<li>可以用freeman-app/target目录生成的jar包</li>\n<li>可以用docker, 上传文件到服务器,在服务器上构建镜像(请查看freeman-app/Dockerfile中的注释内容)</li>\n</ul>\n</li>\n</ul>\n<p>前端 freeman-ant-design-vue</p>\n<ul>\n<li>确认修改正确<code>.env.production</code>配置文件中<code>VUE_APP_URL</code></li>\n<li>在freeman-ant-design-vue目录终端执行yarn命令 <code>yarn build</code></li>\n<li>生成的dist目录下的所有文件放到静态web服务器中即可</li>\n</ul>\n",
  "link": "/zh-cn/docs/doc1.html",
  "meta": {
    "title": "文档",
    "keywords": "Freeman,快速开发框架",
    "description": "Freeman快速开发框架"
  }
}